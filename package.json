{
	"name": "@thencc/dapi-lib",
	"version": "0.0.12",
	"type": "module",
	"main": "dist/index.js",
	"types": "dist/index.d.ts",
	"files": [
		"dist/**"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/thencc/dapi-lib.git"
	},
	"scripts": {
		"build": "rm -rf dist/; tsc",
		"test": "NODE_ENV=purestake jest --runInBand",
		"test:sandbox": "NODE_ENV=sandbox jest",
		"reschema": "docker build --progress plain --tag docker-autodocs --build-arg GIT_ACCESS_TOKEN=${GIT_ACCESS_TOKEN} --build-arg CACHEBUST=$(date +%s) .; npm run docker-docs:run; npm run docker-docs:js-sdk",
		"preview-docs": "ts-node-esm --files ./src/generateDocs.ts; redocly preview-docs ./src/output/swagger.yaml",
		"build-docs": "ts-node-esm --files ./src/generateDocs.ts; redocly build-docs ./src/output/swagger.yaml",
		"generate-types": "npx openapi-typescript ./src/output/openapi3.json -o ./src/js-sdk/schema.d.ts",
		"docker-docs:build": "docker build --progress plain --tag docker-autodocs .",
		"docker-docs:run": "docker stop extract; docker rm extract; docker run --name extract -d docker-autodocs:latest tail -f /dev/null; rm -rf ./output; docker cp extract:/autodoc/ncc-dapis/src/dapis/output ./output; docker cp extract:/autodoc/ncc-dapis/redoc-static.html ./output/index.html",
		"docker-docs:js-sdk": "npx openapi-typescript ./output/openapi3.yaml -o src/schema.ts"
	},
	"dependencies": {
		"@babel/types": "^7.18.13",
		"@thencc/algonautjs": "^0.3.58"
	},
	"devDependencies": {
		"@jest/globals": "^29.5.0",
		"@typescript-eslint/parser": "^5.30.7",
		"dotenv": "^16.0.0",
		"esbuild": "^0.14.27",
		"eslint": "^8.20.0",
		"eslint-plugin-vue": "^8.0.3",
		"jest": "^29.5.0",
		"prettier": "^2.5.1",
		"ts-jest": "^29.1.0",
		"ts-node": "^10.7.0",
		"typescript": "^4.6.4"
	},
	"prettier": {
		"singleQuote": true,
		"useTabs": true,
		"tabWidth": 2,
		"semi": true,
		"trailingComma": "none"
	},
	"eslintConfig": {
		"root": true,
		"env": {
			"node": true
		},
		"extends": [
			"plugin:vue/vue3-essential",
			"eslint:recommended"
		],
		"parserOptions": {
			"ecmaVersion": 2020,
			"parser": "@typescript-eslint/parser"
		},
		"globals": {
			"Stream": true
		},
		"rules": {
			"quotes": [
				"warn",
				"single",
				{
					"avoidEscape": true,
					"allowTemplateLiterals": false
				}
			],
			"indent": "off",
			"semi": [
				"warn",
				"always"
			],
			"no-any": 0,
			"no-unused-vars": "warn",
			"vue/no-v-model-argument": "off"
		}
	}
}
