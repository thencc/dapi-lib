export const documentation = { "data": [{ "type": "post", "url": "/bricks/buy", "title": "Buy bricks", "description": "<p>Buy bricks for a user, note that the user needs to have some USDC to cover the cost!</p>", "name": "BricksBuy", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of user</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "amount", "isArray": false, "description": "<p>Amount (USDC is 6 decimals, e.g. 1 is 1000000)</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/buy-ricks", "title": "Buy ricks", "description": "<p>Buy ricks for a user account</p>", "name": "BricksBuyRicks", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of user</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "amount", "isArray": false, "description": "<p>Amount (1 rick is 1000)</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/create", "title": "Create a media contract", "description": "<p>Deploy a media contract for a dAPI user</p>", "name": "BricksCreate", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "bricksId", "isArray": false, "description": "<p>ID of Bricks</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "mediaUuid", "isArray": false, "description": "<p>UUID for media contract</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "price", "isArray": false, "description": "<p>Price</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "publicPerformancePrice", "isArray": false, "description": "<p>Public performance price</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/list", "title": "List media contracts", "description": "<p>List all media contracts for a user</p>", "name": "BricksList", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/rick-play", "title": "Play a rick", "description": "<p>A &quot;fake play&quot; where we only send a rick</p>", "name": "BricksRickPlay", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of dapi user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "mediaUuid", "isArray": false, "description": "<p>UUID of media contract</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/send", "title": "Send a brick", "description": "<p>Send a brick to a media contract from the dAPI user, not a user proxy</p>", "name": "BricksSend", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "mediaUuid", "isArray": false, "description": "<p>UUID of media contract</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/bricks/send-rick", "title": "Send a rick", "description": "<p>Send a rick to a media contract from a dAPI user, not a proxy</p>", "name": "BricksSendRick", "group": "Bricks", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "mediaUuid", "isArray": false, "description": "<p>UUID of media contract</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "Bricks.ts", "groupTitle": "Bricks" }, { "type": "post", "url": "/impression/create", "title": "Create Impression", "description": "<p>Create Impression</p>", "name": "CreateImpression", "group": "Impression", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>NCC user ID</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Valid Algorand address of creator</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "Impression.ts", "groupTitle": "Impression" }, { "type": "post", "url": "/impression/update-all", "title": "Updates all Impressions", "description": "<p>Updates all Impressions</p>", "name": "UpdateAllImpressions", "group": "Impression", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>NCC user ID</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "unique", "isArray": false, "description": "<p>Unique</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "total", "isArray": false, "description": "<p>Total</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "exposure", "isArray": false, "description": "<p>Exposure</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "engagement", "isArray": false, "description": "<p>Engagement</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "conversion", "isArray": false, "description": "<p>Conversion</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "relevence", "isArray": false, "description": "<p>Relevence</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "revenue", "isArray": false, "description": "<p>Revenue</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "Impression.ts", "groupTitle": "Impression" }, { "type": "post", "url": "/impression/update-one", "title": "Updates one Impression", "description": "<p>Update 1 Impression</p>", "name": "UpdateOneImpression", "group": "Impression", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>NCC user ID</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "field", "isArray": false, "description": "<p>Field</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "value", "isArray": false, "description": "<p>Value</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "Impression.ts", "groupTitle": "Impression" }, { "type": "post", "url": "/linr/media", "title": "Ask LiNR media engine", "description": "<p>Asks LiNR for media</p>", "name": "LinrMedia", "group": "LiNR", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "qText", "isArray": false, "description": "<p>Question</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "ctx", "isArray": false, "description": "<p>Context</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "respLength", "isArray": false, "description": "<p>Response length</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "Linr.ts", "groupTitle": "LiNR" }, { "type": "post", "url": "/linr/music", "title": "Ask LiNR music engine", "description": "<p>Asks LiNR for music</p>", "name": "LinrMusic", "group": "LiNR", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "qText", "isArray": false, "description": "<p>Question</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "ctx", "isArray": false, "description": "<p>Context</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "respLength", "isArray": false, "description": "<p>Response length</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "Linr.ts", "groupTitle": "LiNR" }, { "type": "post", "url": "/rodeo/org/all", "title": "Get all orgs", "description": "<p>Fetch all Rodeo organizations</p>", "name": "FetchAllOrgs", "group": "Org", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/add-admin", "title": "Adds an admin to an existing organization", "description": "<p>Adds an admin to an existing organization</p>", "name": "OrgAddAdmin", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to add admin</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "adminUUID", "isArray": false, "description": "<p>UUID of NCC user to add as admin</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/add-member", "title": "Adds a member to an existing organization", "description": "<p>Adds a member to an existing organization by their NCC UUID</p>", "name": "OrgAddMember", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to add member</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "memberUUID", "isArray": false, "description": "<p>UUID of NCC user to add as member</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/create", "title": "Create new Rodeo organization", "description": "<p>Create an new Rodeo organization</p>", "name": "OrgCreate", "group": "Org", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "orgName", "isArray": false, "description": "<p>Name of organization</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "url", "isArray": false, "description": "<p>Url of organization</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "description", "isArray": false, "description": "<p>Description of organization</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "totalMembers", "isArray": false, "description": "<p>Number of total members</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "totalAdmins", "isArray": false, "description": "<p>Number of total admins</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Algorand address of organization creator</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/get", "title": "Fetch organization by app ID", "description": "<p>Fetch organization details by app ID</p>", "name": "OrgFetchByAppId", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to fetch</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/mint", "title": "Mints an existing organization", "description": "<p>Mints admin and member assets for an existing organization</p>", "name": "OrgMint", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to mint</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/super-admin", "title": "Sets an NCC user as super admin, if eligible", "description": "<p>Sets an NCC user as super admin, if eligible</p>", "name": "OrgSetSuperAdmin", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to set sole admin</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "adminUUID", "isArray": false, "description": "<p>UUID of eligible NCC user to be sole admin</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/test-admin", "title": "Validates if NCC user is an admin", "description": "<p>Validates if NCC user is an admin of the organization</p>", "name": "OrgTestAdmin", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to check</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "adminUUID", "isArray": false, "description": "<p>UUID of NCC user to add as admin</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/test-member", "title": "Validates if NCC user is a member", "description": "<p>Validates if NCC user is a member of the organization</p>", "name": "OrgTestMember", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to check</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "memberUUID", "isArray": false, "description": "<p>UUID of NCC user to add as member</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/rodeo/org/:id/edit", "title": "Updates an existing organization", "description": "<p>Updates an existing organization with provided data</p>", "name": "OrgUpdate", "group": "Org", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "id", "isArray": false, "description": "<p>App index of organization to update</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "Object", "optional": false, "field": "edits", "isArray": false, "description": "<p>Data to update in organization</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "RodeoOrg.ts", "groupTitle": "Org" }, { "type": "post", "url": "/peels/create", "title": "Create peels contract", "description": "<p>Creates Peels contract</p>", "name": "CreatePeels", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "name", "isArray": false, "description": "<p>Name of Peels contract</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "url", "isArray": false, "description": "<p>Associated URL</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Creator address</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object", "optional": false, "field": "data", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.status", "isArray": false, "description": "<p>Algonaut transaction status, one of 'success' | 'fail' | 'rejected'</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.message", "isArray": false, "description": "<p>Message</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.index", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.txId", "isArray": false, "description": "<p>Transaction ID</p>" }, { "group": "Success 200", "type": "Object", "optional": true, "field": "error", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.createdIndex", "isArray": false, "description": "<p>Created app index</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/fund-user", "title": "Funds a user", "description": "<p>Funds a user</p>", "name": "FundsUser", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "address", "isArray": false, "description": "<p>Address to be funded</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "contractId", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "challenge", "isArray": false, "description": "<p>Challenge</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.status", "isArray": false, "description": "<p>Algonaut transaction status, one of 'success' | 'fail' | 'rejected'</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.index", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.txId", "isArray": false, "description": "<p>Transaction ID</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.createdIndex", "isArray": false, "description": "<p>Created app index</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error message</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/get", "title": "Get Peel", "description": "<p>Get Peel</p>", "name": "GetPeel", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "contractId", "isArray": false, "description": "<p>Contract ID</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object[]", "optional": false, "field": "data", "isArray": true, "description": "<p>Array of results</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.id", "isArray": false, "description": "<p>ID</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.address", "isArray": false, "description": "<p>Address</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.name", "isArray": false, "description": "<p>Name</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.meta", "isArray": false, "description": "<p>meta</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.url", "isArray": false, "description": "<p>url</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.isMinted", "isArray": false, "description": "<p>Is it minted?</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.tokenIndex", "isArray": false, "description": "<p>Index of token</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.status", "isArray": false, "description": "<p>Status</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_address", "isArray": false, "description": "<p>Address of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_token", "isArray": false, "description": "<p>Access token of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.updatedAt", "isArray": false, "description": "<p>Updated at</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/grant", "title": "Grants a Peel", "description": "<p>Grants a Peel</p>", "name": "GrantsPeel", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "appId", "isArray": false, "description": "<p>App index of Peels</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "grantToAddress", "isArray": false, "description": "<p>Address of grantee</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "totalGrant", "isArray": false, "description": "<p>Total units to be granted</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object", "optional": false, "field": "data", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.status", "isArray": false, "description": "<p>Algonaut transaction status, one of 'success' | 'fail' | 'rejected'</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.message", "isArray": false, "description": "<p>Message</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.index", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.txId", "isArray": false, "description": "<p>Transaction ID</p>" }, { "group": "Success 200", "type": "Object", "optional": true, "field": "error", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.createdIndex", "isArray": false, "description": "<p>Created app index</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/grant-tokens", "title": "Grants Peel tokens", "description": "<p>Grants Peel tokens</p>", "name": "GrantsPeelToken", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "appId", "isArray": false, "description": "<p>App index of Peels</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "grantToAddress", "isArray": false, "description": "<p>Address of grantee</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "tokenId", "isArray": false, "description": "<p>Index of toekn</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "totalTokens", "isArray": false, "description": "<p>Total tokens to be granted</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object", "optional": false, "field": "data", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.status", "isArray": false, "description": "<p>Algonaut transaction status, one of 'success' | 'fail' | 'rejected'</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.message", "isArray": false, "description": "<p>Message</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.index", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.txId", "isArray": false, "description": "<p>Transaction ID</p>" }, { "group": "Success 200", "type": "Object", "optional": true, "field": "error", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.createdIndex", "isArray": false, "description": "<p>Created app index</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/list-all", "title": "List all Peels", "description": "<p>Lists all Peels</p>", "name": "ListAllPeels", "group": "Peels", "version": "1.0.0", "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object[]", "optional": false, "field": "data", "isArray": true, "description": "<p>Array of results</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.id", "isArray": false, "description": "<p>ID</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.address", "isArray": false, "description": "<p>Address</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.name", "isArray": false, "description": "<p>Name</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.meta", "isArray": false, "description": "<p>meta</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.url", "isArray": false, "description": "<p>url</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.isMinted", "isArray": false, "description": "<p>Is it minted?</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.tokenIndex", "isArray": false, "description": "<p>Index of token</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.status", "isArray": false, "description": "<p>Status</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_address", "isArray": false, "description": "<p>Address of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_token", "isArray": false, "description": "<p>Access token of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.updatedAt", "isArray": false, "description": "<p>Updated at</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/list-mine", "title": "List My Peels", "description": "<p>Lists my Peels</p>", "name": "ListMyPeels", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "Number[]", "optional": false, "field": "contractIds", "isArray": true, "description": "<p>Contract IDs</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object[]", "optional": false, "field": "data", "isArray": true, "description": "<p>Array of results</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.id", "isArray": false, "description": "<p>ID</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.address", "isArray": false, "description": "<p>Address</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.name", "isArray": false, "description": "<p>Name</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.meta", "isArray": false, "description": "<p>meta</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.url", "isArray": false, "description": "<p>url</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.isMinted", "isArray": false, "description": "<p>Is it minted?</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.tokenIndex", "isArray": false, "description": "<p>Index of token</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.status", "isArray": false, "description": "<p>Status</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_address", "isArray": false, "description": "<p>Address of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_token", "isArray": false, "description": "<p>Access token of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.updatedAt", "isArray": false, "description": "<p>Updated at</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/list", "title": "List Peels", "description": "<p>Lists Peels</p>", "name": "ListPeels", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Address of Peels creator</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object[]", "optional": false, "field": "data", "isArray": true, "description": "<p>Array of results</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.id", "isArray": false, "description": "<p>ID</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.address", "isArray": false, "description": "<p>Address</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.name", "isArray": false, "description": "<p>Name</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.meta", "isArray": false, "description": "<p>meta</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.url", "isArray": false, "description": "<p>url</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.isMinted", "isArray": false, "description": "<p>Is it minted?</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.tokenIndex", "isArray": false, "description": "<p>Index of token</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.status", "isArray": false, "description": "<p>Status</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_address", "isArray": false, "description": "<p>Address of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.creator_token", "isArray": false, "description": "<p>Access token of creator</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object[]", "isArray": true }, "field": "data.updatedAt", "isArray": false, "description": "<p>Updated at</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/peels/mint", "title": "Mints a Peel", "description": "<p>Mints a Peel</p>", "name": "MintsPeel", "group": "Peels", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "appId", "isArray": false, "description": "<p>App index of Peels</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "tokenName", "isArray": false, "description": "<p>Name of Peels</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "tokenUrl", "isArray": false, "description": "<p>URL of token</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "totalTokens", "isArray": false, "description": "<p>Number of total tokens</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "Object", "optional": false, "field": "data", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.status", "isArray": false, "description": "<p>Algonaut transaction status, one of 'success' | 'fail' | 'rejected'</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.message", "isArray": false, "description": "<p>Message</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.index", "isArray": false, "description": "<p>Index of contract</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.txId", "isArray": false, "description": "<p>Transaction ID</p>" }, { "group": "Success 200", "type": "Object", "optional": true, "field": "error", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error object</p>" }, { "group": "Success 200", "type": "String", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.meta", "isArray": false, "description": "<p>Metadata</p>" }, { "group": "Success 200", "type": "Number", "optional": true, "parentNode": { "path": "data", "field": "data", "type": "Object", "isArray": false }, "field": "data.createdIndex", "isArray": false, "description": "<p>Created app index</p>" }] } }, "filename": "Peels.ts", "groupTitle": "Peels" }, { "type": "post", "url": "/ttm/receive", "title": "Receive TTM", "description": "<p>Receive TTM</p>", "name": "ReceiveTTM", "group": "TTM", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "lastRound", "isArray": false, "description": "<p>Last blockchain round to search</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }] } }, "filename": "TTM.ts", "groupTitle": "TTM" }, { "type": "post", "url": "/ttm/relay", "title": "Relay TTM", "description": "<p>Relay TTM</p>", "name": "RelayTTM", "group": "TTM", "version": "1.0.0", "filename": "TTM.ts", "groupTitle": "TTM" }, { "type": "post", "url": "/ttm/send", "title": "Send TTM", "description": "<p>Send TTM</p>", "name": "SendTTM", "group": "TTM", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "type", "isArray": false, "description": "<p>Type of message</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "tokens", "isArray": false, "description": "<p>ASA ID of token to target</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message to send</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "files", "isArray": false, "description": "<p>TTM files</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "part", "isArray": false, "description": "<p>TTM part</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uri", "isArray": false, "description": "<p>TTM uri</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }] } }, "filename": "TTM.ts", "groupTitle": "TTM" }, { "type": "post", "url": "/ttm/send-by-token", "title": "Send TTM", "description": "<p>Send TTM</p>", "name": "SendTTM", "group": "TTM", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "type", "isArray": false, "description": "<p>Type of message</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "tokens", "isArray": false, "description": "<p>ASA ID of token to target</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message to send</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "files", "isArray": false, "description": "<p>TTM files</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "part", "isArray": false, "description": "<p>TTM part</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uri", "isArray": false, "description": "<p>TTM uri</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }] } }, "filename": "TTM.ts", "groupTitle": "TTM" }, { "type": "post", "url": "/get-access-token", "title": "Get access token", "description": "<p>Gets access token</p>", "name": "GetAccessToken", "group": "User2", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "address", "isArray": false, "description": "<p>Algorand address of user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "txId", "isArray": false, "description": "<p>ID of signed atomic transaction to get NCC token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "signedTx", "isArray": false, "description": "<p>Base64 encoded string of signed transaction</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.token", "isArray": false, "description": "<p>The access token</p>" }, { "group": "Success 200", "type": "Number", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.expires", "isArray": false, "description": "<p>Date of expiry (ms since epoch)</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error message</p> <p>If the address already has an access token, just return that</p> <p>MainNet NCC token is: 1089370737 MainNet SLA is: 1090801931</p>" }] } }, "filename": "GetAccessToken.ts", "groupTitle": "User2" }, { "type": "post", "url": "/invite/refeemm", "title": "Redeem invite code for NCC Memember Token", "description": "<p>Redeems</p>", "name": "RedeemPortalInvite", "group": "User2", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "address", "isArray": false, "description": "<p>Algorand address of user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "invite", "isArray": false, "description": "<p>The invite code</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Error message</p> <p>If the address already has an NCC token, this will error, if the address is not yet funded, this will fund it and return the funded success message</p>" }] } }, "filename": "Invite.ts", "groupTitle": "User2" }, { "type": "post", "url": "/user/deregister", "title": "Deregister an NCC user", "description": "<p>Deregister an NCC user</p>", "name": "DeregisterUser", "group": "User", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>Active NCC user uuid to de-register</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>String of result, TODO fix this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>String of error, TODO fix this to be accurate</p>" }] } }, "filename": "User.ts", "groupTitle": "User" }, { "type": "post", "url": "/list-accounts", "title": "List accounts", "description": "<p>List NCC accounts</p>", "name": "ListAccounts", "group": "User", "version": "1.0.0", "query": [{ "group": "Query", "type": "Number", "optional": false, "field": "limit", "isArray": false, "description": "<p>Pagination limit, defaults to 10</p>" }, { "group": "Query", "type": "Number", "optional": false, "field": "page", "isArray": false, "description": "<p>Page, defaults to 1</p>" }], "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Algorand address of creator</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO update this to be accurate</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO update this to be accurate</p>" }] } }, "filename": "ListAccounts.ts", "groupTitle": "User" }, { "type": "post", "url": "/user/opt-into-app", "title": "Opt user account into app", "description": "<p>Opt an NCC user into an app</p>", "name": "OptUserApp", "group": "User", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>Active NCC user uuid to opt-in</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "appId", "isArray": false, "description": "<p>ID of app to opt-in</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "appArgs", "isArray": false, "description": "<p>Comma-separated string of app arguments, up to 8</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "User.ts", "groupTitle": "User" }, { "type": "post", "url": "/user/opt-into-token", "title": "Opt user account into token", "description": "<p>Opt an NCC user into a token</p>", "name": "OptUserToken", "group": "User", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>Active NCC user uuid to opt-in</p>" }, { "group": "Body", "type": "Number", "optional": false, "field": "asaId", "isArray": false, "description": "<p>ID of asset to opt-in, defaults to Algo</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this nested obj</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "User.ts", "groupTitle": "User" }, { "type": "post", "url": "/user/register", "title": "Register a user account", "description": "<p>Create an NCC user</p>", "name": "RegisterUser", "group": "User", "version": "1.0.0", "header": { "fields": { "Header": [{ "group": "Header", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Header", "type": "String", "optional": false, "field": "whichNet", "isArray": false, "description": "<p>One of &quot;TESTNET&quot; || &quot;MAINNET&quot;</p>" }] } }, "body": [{ "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>Active NCC user uuid</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "creatorAddress", "isArray": false, "description": "<p>Algorand address of creator</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "result", "field": "result", "type": "Object", "isArray": false }, "field": "result.message", "isArray": false, "description": "<p>Message of result, TODO fix this</p>" }, { "group": "Success 200", "type": "String", "optional": false, "parentNode": { "path": "error", "field": "error", "type": "Object", "isArray": false }, "field": "error.message", "isArray": false, "description": "<p>Message of error, TODO fix this nested obj</p>" }] } }, "filename": "User.ts", "groupTitle": "User" }, { "type": "post", "url": "/ttm/deregister", "title": "Deregister Geo identity", "description": "<p>Deregister Geo</p>", "name": "DeregisterGeo", "group": "geo", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }] } }, "filename": "Geo.ts", "groupTitle": "geo" }, { "type": "get", "url": "/ttm/dns", "title": "Geo DNS Records", "description": "<p>Geo DNS</p>", "name": "Geo_DNS", "group": "geo", "version": "1.0.0", "filename": "Geo.ts", "groupTitle": "geo" }, { "type": "post", "url": "/geo/register", "title": "Register an identity on geo", "description": "<p>Register Geo Identity</p>", "name": "RegisterGeo", "group": "geo", "version": "1.0.0", "body": [{ "group": "Body", "type": "String", "optional": false, "field": "accessToken", "isArray": false, "description": "<p>Valid NCC access token</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "uuid", "isArray": false, "description": "<p>UUID of active NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "wallet", "isArray": false, "description": "<p>address of NCC user</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "url", "isArray": false, "description": "<p>of NCC user's website</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "coordinates", "isArray": false, "description": "<p>of NCC user's location</p>" }, { "group": "Body", "type": "String", "optional": false, "field": "NORAD", "isArray": false, "description": "<p>ID of NCC user's favorite satellite</p>" }], "success": { "fields": { "Success 200": [{ "group": "Success 200", "type": "String", "optional": false, "field": "status", "isArray": false, "description": "<p>Status of response, either 'success' or 'fail</p>" }, { "group": "Success 200", "type": "String", "optional": false, "field": "message", "isArray": false, "description": "<p>Message of response</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "result", "isArray": false, "description": "<p>More details about response's result, on success</p>" }, { "group": "Success 200", "type": "Object", "optional": false, "field": "error", "isArray": false, "description": "<p>More details about response's error, on fail</p>" }] } }, "filename": "Geo.ts", "groupTitle": "geo" }], "project": { "name": "Acme project", "version": "0.0.0", "description": "REST Api", "sampleUrl": false, "defaultVersion": "0.0.0", "apidoc": "0.3.0", "generator": { "name": "apidoc", "time": "Tue Aug 15 2023 23:38:14 GMT+0000 (Coordinated Universal Time)", "url": "https://apidocjs.com", "version": "1.0.3" } }, "swagDoc": { "openapi": "3.0.0", "info": { "title": "", "version": "0.0.0", "description": "" }, "paths": { "/bricks/buy": { "post": { "tags": ["Bricks"], "summary": "BricksBuy", "description": "Buy bricks", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of user" }, "amount": { "type": "number", "description": "Amount (USDC is 6 decimals, e.g. 1 is 1000000)" } }, "type": "object", "required": ["accessToken", "uuid", "amount"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/buy-ricks": { "post": { "tags": ["Bricks"], "summary": "BricksBuyRicks", "description": "Buy ricks", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of user" }, "amount": { "type": "number", "description": "Amount (1 rick is 1000)" } }, "type": "object", "required": ["accessToken", "uuid", "amount"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/create": { "post": { "tags": ["Bricks"], "summary": "BricksCreate", "description": "Create a media contract", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "bricksId": { "type": "string", "description": "ID of Bricks" }, "mediaUuid": { "type": "string", "description": "UUID for media contract" }, "meta": { "type": "string", "description": "Metadata" }, "price": { "type": "number", "description": "Price" }, "publicPerformancePrice": { "type": "number", "description": "Public performance price" } }, "type": "object", "required": ["accessToken", "bricksId", "mediaUuid", "meta", "price", "publicPerformancePrice"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/list": { "post": { "tags": ["Bricks"], "summary": "BricksList", "description": "List media contracts", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" } }, "type": "object", "required": ["accessToken"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/rick-play": { "post": { "tags": ["Bricks"], "summary": "BricksRickPlay", "description": "Play a rick", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of dapi user" }, "mediaUuid": { "type": "string", "description": "UUID of media contract" } }, "type": "object", "required": ["accessToken", "uuid", "mediaUuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/send": { "post": { "tags": ["Bricks"], "summary": "BricksSend", "description": "Send a brick", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "mediaUuid": { "type": "string", "description": "UUID of media contract" } }, "type": "object", "required": ["accessToken", "mediaUuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/bricks/send-rick": { "post": { "tags": ["Bricks"], "summary": "BricksSendRick", "description": "Send a rick", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "mediaUuid": { "type": "string", "description": "UUID of media contract" } }, "type": "object", "required": ["accessToken", "mediaUuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/impression/create": { "post": { "tags": ["Impression"], "summary": "CreateImpression", "description": "Create Impression", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid access token" }, "uuid": { "type": "string", "description": "NCC user ID" }, "creatorAddress": { "type": "string", "description": "Valid Algorand address of creator" } }, "type": "object", "required": ["accessToken", "uuid", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/impression/update-all": { "post": { "tags": ["Impression"], "summary": "UpdateAllImpressions", "description": "Updates all Impressions", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid access token" }, "uuid": { "type": "string", "description": "NCC user ID" }, "unique": { "type": "number", "description": "Unique" }, "total": { "type": "number", "description": "Total" }, "exposure": { "type": "number", "description": "Exposure" }, "engagement": { "type": "number", "description": "Engagement" }, "conversion": { "type": "number", "description": "Conversion" }, "relevence": { "type": "number", "description": "Relevence" }, "revenue": { "type": "number", "description": "Revenue" } }, "type": "object", "required": ["accessToken", "uuid", "unique", "total", "exposure", "engagement", "conversion", "relevence", "revenue"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/impression/update-one": { "post": { "tags": ["Impression"], "summary": "UpdateOneImpression", "description": "Updates one Impression", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid access token" }, "uuid": { "type": "string", "description": "NCC user ID" }, "field": { "type": "string", "description": "Field" }, "value": { "type": "string", "description": "Value" } }, "type": "object", "required": ["accessToken", "uuid", "field", "value"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/linr/media": { "post": { "tags": ["LiNR"], "summary": "LinrMedia", "description": "Ask LiNR media engine", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "qText": { "type": "string", "description": "Question" }, "ctx": { "type": "string", "description": "Context" }, "respLength": { "type": "string", "description": "Response length" } }, "type": "object", "required": ["qText", "ctx", "respLength"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/linr/music": { "post": { "tags": ["LiNR"], "summary": "LinrMusic", "description": "Ask LiNR music engine", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "qText": { "type": "string", "description": "Question" }, "ctx": { "type": "string", "description": "Context" }, "respLength": { "type": "string", "description": "Response length" } }, "type": "object", "required": ["qText", "ctx", "respLength"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/all": { "post": { "tags": ["Org"], "summary": "FetchAllOrgs", "description": "Get all orgs", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" } }, "type": "object", "required": ["accessToken"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/add-admin": { "post": { "tags": ["Org"], "summary": "OrgAddAdmin", "description": "Adds an admin to an existing organization", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to add admin", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "adminUUID": { "type": "string", "description": "UUID of NCC user to add as admin" } }, "type": "object", "required": ["accessToken", "uuid", "adminUUID"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/add-member": { "post": { "tags": ["Org"], "summary": "OrgAddMember", "description": "Adds a member to an existing organization", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to add member", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "memberUUID": { "type": "string", "description": "UUID of NCC user to add as member" } }, "type": "object", "required": ["accessToken", "uuid", "memberUUID"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/create": { "post": { "tags": ["Org"], "summary": "OrgCreate", "description": "Create new Rodeo organization", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "orgName": { "type": "string", "description": "Name of organization" }, "url": { "type": "string", "description": "Url of organization" }, "description": { "type": "string", "description": "Description of organization" }, "totalMembers": { "type": "number", "description": "Number of total members" }, "totalAdmins": { "type": "number", "description": "Number of total admins" }, "accessToken": { "type": "string", "description": "Valid NCC access token" }, "creatorAddress": { "type": "string", "description": "Algorand address of organization creator" } }, "type": "object", "required": ["orgName", "url", "description", "totalMembers", "totalAdmins", "accessToken", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/get": { "post": { "tags": ["Org"], "summary": "OrgFetchByAppId", "description": "Fetch organization by app ID", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to fetch", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/mint": { "post": { "tags": ["Org"], "summary": "OrgMint", "description": "Mints an existing organization", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to mint", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/super-admin": { "post": { "tags": ["Org"], "summary": "OrgSetSuperAdmin", "description": "Sets an NCC user as super admin, if eligible", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to set sole admin", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "adminUUID": { "type": "string", "description": "UUID of eligible NCC user to be sole admin" } }, "type": "object", "required": ["accessToken", "uuid", "adminUUID"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/test-admin": { "post": { "tags": ["Org"], "summary": "OrgTestAdmin", "description": "Validates if NCC user is an admin", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to check", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "adminUUID": { "type": "string", "description": "UUID of NCC user to add as admin" } }, "type": "object", "required": ["accessToken", "uuid", "adminUUID"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/test-member": { "post": { "tags": ["Org"], "summary": "OrgTestMember", "description": "Validates if NCC user is a member", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to check", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "memberUUID": { "type": "string", "description": "UUID of NCC user to add as member" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "memberUUID", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/rodeo/org/{id}/edit": { "post": { "tags": ["Org"], "summary": "OrgUpdate", "description": "Updates an existing organization", "parameters": [{ "in": "query", "name": "id", "description": "App index of organization to update", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "edits": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["accessToken", "uuid", "edits"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/peels/create": { "post": { "tags": ["Peels"], "summary": "CreatePeels", "description": "Create peels contract", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "name": { "type": "string", "description": "Name of Peels contract" }, "meta": { "type": "string", "description": "Metadata" }, "url": { "type": "string", "description": "Associated URL" }, "creatorAddress": { "type": "string", "description": "Creator address" } }, "type": "object", "required": ["accessToken", "name", "meta", "url", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "object", "properties": { "status": { "type": "string", "description": "Algonaut transaction status, one of 'success' | 'fail' | 'rejected'" }, "message": { "type": "string", "description": "Message" }, "index": { "type": "number", "description": "Index of contract" }, "txId": { "type": "string", "description": "Transaction ID" }, "meta": { "type": "string", "description": "Metadata" }, "createdIndex": { "type": "number", "description": "Created app index" } }, "required": ["status", "message", "txId"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error object" } }, "required": [] } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/fund-user": { "post": { "tags": ["Peels"], "summary": "FundsUser", "description": "Funds a user", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "address": { "type": "string", "description": "Address to be funded" }, "contractId": { "type": "string", "description": "Index of contract" }, "challenge": { "type": "string", "description": "Challenge" } }, "type": "object", "required": ["address", "contractId", "challenge"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "status": { "type": "string", "description": "Algonaut transaction status, one of 'success' | 'fail' | 'rejected'" }, "message": { "type": "string", "description": "Message" }, "index": { "type": "number", "description": "Index of contract" }, "txId": { "type": "string", "description": "Transaction ID" }, "meta": { "type": "string", "description": "Metadata" }, "createdIndex": { "type": "number", "description": "Created app index" } }, "required": ["status", "message", "txId"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error message" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/peels/get": { "post": { "tags": ["Peels"], "summary": "GetPeel", "description": "Get Peel", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "contractId": { "type": "string", "description": "Contract ID" } }, "type": "object", "required": ["accessToken", "contractId"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "type": "object", "properties": { "id": { "type": "string", "description": "ID" }, "address": { "type": "string", "description": "Address" }, "name": { "type": "string", "description": "Name" }, "meta": { "type": "string", "description": "meta" }, "url": { "type": "string", "description": "url" }, "isMinted": { "type": "string", "description": "Is it minted?" }, "tokenIndex": { "type": "string", "description": "Index of token" }, "status": { "type": "string", "description": "Status" }, "creator_address": { "type": "string", "description": "Address of creator" }, "creator_token": { "type": "string", "description": "Access token of creator" }, "updatedAt": { "type": "string", "description": "Updated at" } }, "required": ["id", "address", "name", "meta", "url", "isMinted", "tokenIndex", "status", "creator_address", "creator_token", "updatedAt"] } } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/grant": { "post": { "tags": ["Peels"], "summary": "GrantsPeel", "description": "Grants a Peel", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "appId": { "type": "number", "description": "App index of Peels" }, "grantToAddress": { "type": "string", "description": "Address of grantee" }, "totalGrant": { "type": "number", "description": "Total units to be granted" } }, "type": "object", "required": ["accessToken", "appId", "grantToAddress", "totalGrant"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "object", "properties": { "status": { "type": "string", "description": "Algonaut transaction status, one of 'success' | 'fail' | 'rejected'" }, "message": { "type": "string", "description": "Message" }, "index": { "type": "number", "description": "Index of contract" }, "txId": { "type": "string", "description": "Transaction ID" }, "meta": { "type": "string", "description": "Metadata" }, "createdIndex": { "type": "number", "description": "Created app index" } }, "required": ["status", "message", "txId"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error object" } }, "required": [] } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/grant-tokens": { "post": { "tags": ["Peels"], "summary": "GrantsPeelToken", "description": "Grants Peel tokens", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "appId": { "type": "number", "description": "App index of Peels" }, "grantToAddress": { "type": "string", "description": "Address of grantee" }, "tokenId": { "type": "number", "description": "Index of toekn" }, "totalTokens": { "type": "number", "description": "Total tokens to be granted" } }, "type": "object", "required": ["accessToken", "appId", "grantToAddress", "tokenId", "totalTokens"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "object", "properties": { "status": { "type": "string", "description": "Algonaut transaction status, one of 'success' | 'fail' | 'rejected'" }, "message": { "type": "string", "description": "Message" }, "index": { "type": "number", "description": "Index of contract" }, "txId": { "type": "string", "description": "Transaction ID" }, "meta": { "type": "string", "description": "Metadata" }, "createdIndex": { "type": "number", "description": "Created app index" } }, "required": ["status", "message", "txId"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error object" } }, "required": [] } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/list-all": { "post": { "tags": ["Peels"], "summary": "ListAllPeels", "description": "List all Peels", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": {}, "type": "object", "required": [] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "type": "object", "properties": { "id": { "type": "string", "description": "ID" }, "address": { "type": "string", "description": "Address" }, "name": { "type": "string", "description": "Name" }, "meta": { "type": "string", "description": "meta" }, "url": { "type": "string", "description": "url" }, "isMinted": { "type": "string", "description": "Is it minted?" }, "tokenIndex": { "type": "string", "description": "Index of token" }, "status": { "type": "string", "description": "Status" }, "creator_address": { "type": "string", "description": "Address of creator" }, "creator_token": { "type": "string", "description": "Access token of creator" }, "updatedAt": { "type": "string", "description": "Updated at" } }, "required": ["id", "address", "name", "meta", "url", "isMinted", "tokenIndex", "status", "creator_address", "creator_token", "updatedAt"] } } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/list-mine": { "post": { "tags": ["Peels"], "summary": "ListMyPeels", "description": "List My Peels", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "contractIds": { "items": { "type": "number", "description": "Contract IDs" }, "type": "array" } }, "type": "object", "required": ["accessToken", "contractIds"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "type": "object", "properties": { "id": { "type": "string", "description": "ID" }, "address": { "type": "string", "description": "Address" }, "name": { "type": "string", "description": "Name" }, "meta": { "type": "string", "description": "meta" }, "url": { "type": "string", "description": "url" }, "isMinted": { "type": "string", "description": "Is it minted?" }, "tokenIndex": { "type": "string", "description": "Index of token" }, "status": { "type": "string", "description": "Status" }, "creator_address": { "type": "string", "description": "Address of creator" }, "creator_token": { "type": "string", "description": "Access token of creator" }, "updatedAt": { "type": "string", "description": "Updated at" } }, "required": ["id", "address", "name", "meta", "url", "isMinted", "tokenIndex", "status", "creator_address", "creator_token", "updatedAt"] } } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/list": { "post": { "tags": ["Peels"], "summary": "ListPeels", "description": "List Peels", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "creatorAddress": { "type": "string", "description": "Address of Peels creator" } }, "type": "object", "required": ["accessToken", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "type": "object", "properties": { "id": { "type": "string", "description": "ID" }, "address": { "type": "string", "description": "Address" }, "name": { "type": "string", "description": "Name" }, "meta": { "type": "string", "description": "meta" }, "url": { "type": "string", "description": "url" }, "isMinted": { "type": "string", "description": "Is it minted?" }, "tokenIndex": { "type": "string", "description": "Index of token" }, "status": { "type": "string", "description": "Status" }, "creator_address": { "type": "string", "description": "Address of creator" }, "creator_token": { "type": "string", "description": "Access token of creator" }, "updatedAt": { "type": "string", "description": "Updated at" } }, "required": ["id", "address", "name", "meta", "url", "isMinted", "tokenIndex", "status", "creator_address", "creator_token", "updatedAt"] } } }, "type": "object", "required": ["data"] } } } } } } }, "/peels/mint": { "post": { "tags": ["Peels"], "summary": "MintsPeel", "description": "Mints a Peel", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "appId": { "type": "number", "description": "App index of Peels" }, "tokenName": { "type": "string", "description": "Name of Peels" }, "tokenUrl": { "type": "string", "description": "URL of token" }, "totalTokens": { "type": "number", "description": "Number of total tokens" } }, "type": "object", "required": ["accessToken", "appId", "tokenName", "tokenUrl", "totalTokens"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "data": { "type": "object", "properties": { "status": { "type": "string", "description": "Algonaut transaction status, one of 'success' | 'fail' | 'rejected'" }, "message": { "type": "string", "description": "Message" }, "index": { "type": "number", "description": "Index of contract" }, "txId": { "type": "string", "description": "Transaction ID" }, "meta": { "type": "string", "description": "Metadata" }, "createdIndex": { "type": "number", "description": "Created app index" } }, "required": ["status", "message", "txId"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error object" } }, "required": [] } }, "type": "object", "required": ["data"] } } } } } } }, "/ttm/receive": { "post": { "tags": ["TTM"], "summary": "ReceiveTTM", "description": "Receive TTM", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "lastRound": { "type": "number", "description": "Last blockchain round to search" } }, "type": "object", "required": ["accessToken", "uuid", "lastRound"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/ttm/relay": { "post": { "tags": ["TTM"], "summary": "RelayTTM", "description": "Relay TTM", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": {}, "type": "object", "required": [] } } } }, "responses": { "200": { "schema": { "properties": {}, "type": "object", "required": [] } } } } }, "/ttm/send": { "post": { "tags": ["TTM"], "summary": "SendTTM", "description": "Send TTM", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "type": { "type": "string", "description": "Type of message" }, "tokens": { "type": "number", "description": "ASA ID of token to target" }, "message": { "type": "string", "description": "Message to send" }, "files": { "type": "string", "description": "TTM files" }, "part": { "type": "number", "description": "TTM part" }, "uri": { "type": "string", "description": "TTM uri" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "type", "tokens", "message", "files", "part", "uri", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/ttm/send-by-token": { "post": { "tags": ["TTM"], "summary": "SendTTM", "description": "Send TTM", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "type": { "type": "string", "description": "Type of message" }, "tokens": { "type": "number", "description": "ASA ID of token to target" }, "message": { "type": "string", "description": "Message to send" }, "files": { "type": "string", "description": "TTM files" }, "part": { "type": "number", "description": "TTM part" }, "uri": { "type": "string", "description": "TTM uri" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "type", "tokens", "message", "files", "part", "uri", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/get-access-token": { "post": { "tags": ["User2"], "summary": "GetAccessToken", "description": "Get access token", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "address": { "type": "string", "description": "Algorand address of user" }, "txId": { "type": "string", "description": "ID of signed atomic transaction to get NCC token" }, "signedTx": { "type": "string", "description": "Base64 encoded string of signed transaction" } }, "type": "object", "required": ["address", "txId", "signedTx"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "token": { "type": "string", "description": "The access token" }, "expires": { "type": "number", "description": "Date of expiry (ms since epoch)" } }, "required": ["token", "expires"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error message\n\nIf the address already has an access token, just return that\n\nMainNet NCC token is: 1089370737\nMainNet SLA is: 1090801931" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/invite/refeemm": { "post": { "tags": ["User2"], "summary": "RedeemPortalInvite", "description": "Redeem invite code for NCC Memember Token", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "address": { "type": "string", "description": "Algorand address of user" }, "invite": { "type": "string", "description": "The invite code" } }, "type": "object", "required": ["address", "invite"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Error message\n\nIf the address already has an NCC token, this will error, if the address is\nnot yet funded, this will fund it and return the funded success message" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/user/deregister": { "post": { "tags": ["User"], "summary": "DeregisterUser", "description": "Deregister an NCC user", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "Active NCC user uuid to de-register" } }, "type": "object", "required": ["accessToken", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "String of result, TODO fix this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "String of error, TODO fix this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/list-accounts": { "post": { "tags": ["User"], "summary": "ListAccounts", "description": "List accounts", "parameters": [{ "in": "query", "name": "limit", "description": "Pagination limit, defaults to 10", "required": true, "schema": { "type": "string" } }, { "in": "query", "name": "page", "description": "Page, defaults to 1", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "creatorAddress": { "type": "string", "description": "Algorand address of creator" } }, "type": "object", "required": ["accessToken", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO update this to be accurate" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO update this to be accurate" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/user/opt-into-app": { "post": { "tags": ["User"], "summary": "OptUserApp", "description": "Opt user account into app", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "Active NCC user uuid to opt-in" }, "appId": { "type": "number", "description": "ID of app to opt-in" }, "appArgs": { "type": "string", "description": "Comma-separated string of app arguments, up to 8" } }, "type": "object", "required": ["accessToken", "uuid", "appId", "appArgs"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/user/opt-into-token": { "post": { "tags": ["User"], "summary": "OptUserToken", "description": "Opt user account into token", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "Active NCC user uuid to opt-in" }, "asaId": { "type": "number", "description": "ID of asset to opt-in, defaults to Algo" } }, "type": "object", "required": ["accessToken", "uuid", "asaId"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this nested obj" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/user/register": { "post": { "tags": ["User"], "summary": "RegisterUser", "description": "Register a user account", "parameters": [{ "in": "header", "name": "accessToken", "description": "Valid NCC access token", "required": true, "schema": { "type": "string" } }, { "in": "header", "name": "whichNet", "description": "One of \"TESTNET\" || \"MAINNET\"", "required": true, "schema": { "type": "string" } }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "uuid": { "type": "string", "description": "Active NCC user uuid" }, "creatorAddress": { "type": "string", "description": "Algorand address of creator" } }, "type": "object", "required": ["uuid", "creatorAddress"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of result, TODO fix this" } }, "required": ["message"] }, "error": { "type": "object", "properties": { "message": { "type": "string", "description": "Message of error, TODO fix this nested obj" } }, "required": ["message"] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/ttm/deregister": { "post": { "tags": ["geo"], "summary": "DeregisterGeo", "description": "Deregister Geo identity", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" } }, "type": "object", "required": ["accessToken", "uuid"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } }, "/ttm/dns": { "get": { "tags": ["geo"], "summary": "Geo DNS", "description": "Geo DNS Records", "parameters": [], "requestBody": { "required": true, "content": { "application/json": {} } }, "responses": { "200": { "schema": { "properties": {}, "type": "object", "required": [] } } } } }, "/geo/register": { "post": { "tags": ["geo"], "summary": "RegisterGeo", "description": "Register an identity on geo", "parameters": [], "requestBody": { "required": true, "content": { "application/json": { "schema": { "properties": { "accessToken": { "type": "string", "description": "Valid NCC access token" }, "uuid": { "type": "string", "description": "UUID of active NCC user" }, "wallet": { "type": "string", "description": "address of NCC user" }, "url": { "type": "string", "description": "of NCC user's website" }, "coordinates": { "type": "string", "description": "of NCC user's location" }, "NORAD": { "type": "string", "description": "ID of NCC user's favorite satellite" } }, "type": "object", "required": ["accessToken", "uuid", "wallet", "url", "coordinates", "NORAD"] } } } }, "responses": { "200": { "description": "A successful response", "content": { "application/json": { "schema": { "properties": { "status": { "type": "string", "description": "Status of response, either 'success' or 'fail" }, "message": { "type": "string", "description": "Message of response" }, "result": { "type": "object", "properties": {}, "required": [] }, "error": { "type": "object", "properties": {}, "required": [] } }, "type": "object", "required": ["status", "message", "result", "error"] } } } } } } } } } };
